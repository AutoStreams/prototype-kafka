version: "3.8"

services:
  kafka-prototype-producer:
    build: ./kafka-prototype-producer
    environment:
      KAFKA_URL: kafka:9092
    depends_on:
      - "init-kafka"
    ports:
      - "8992:8992"

  data-producer:
    build: ./data-producer
    environment:
      PRODUCER_URL: kafka-prototype-producer
      PRODUCER_PORT: 8992
    depends_on:
      - "kafka-prototype-producer"

  kafka-prototype-consumer:
    build: ./consumer
    environment:
      KAFKA_URL: kafka:9092
    depends_on:
      - "init-kafka"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  init-kafka:
    image: docker.io/bitnami/kafka:3
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic Testtopic --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
