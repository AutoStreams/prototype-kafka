version: "3.8"

services:
  producer:
    build: ./producer
    environment:
      KAFKA_URL: kafka:9092
    depends_on:
      - init-kafka
    ports:
      - 8992:8992

  data-provider:
    build: ./data-provider
    environment:
      PRODUCER_URL: producer
      PRODUCER_PORT: 8992
    depends_on:
      - producer

  consumer:
    build: ./consumer
    environment:
      KAFKA_URL: kafka:9092
    depends_on:
      - init-kafka

  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      #TODO: Manage authentication
      ALLOW_ANONYMOUS_LOGIN: yes
      ZOO_TICK_TIME: 2000
      ZOO_PORT_NUMBER: 2181
    ports:
      - 22181:2181
  
  kafka:
    image: bitnami/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      #TODO: Manage authentication
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_LISTENERS: CLIENT://:9092,EXTERNAL://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: CLIENT

  init-kafka:
    image: bitnami/kafka:latest
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic Testtopic --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
